CMAKE_MINIMUM_REQUIRED(VERSION 3.7)
PROJECT(gist VERSION 1.0.5 LANGUAGES CXX)

OPTION(BUILD_DOCS "Build docs" ON)

SET(DEFAULT_BUILD_TYPE "Release")

SET(DEFAULT_BUILD_TYPE "Release")
IF(NOT CMAKE_BUILD_TYPE AND NOT CMAKE_CONFIGURATION_TYPES)
  MESSAGE(STATUS "SETting build type to '${DEFAULT_BUILD_TYPE}' as none was specified.")
  SET(CMAKE_BUILD_TYPE "${DEFAULT_BUILD_TYPE}" CACHE STRING "Choose the type of build." FORCE)
  # SET the possible values of build type for cmake-gui
  SET_PROPERTY(CACHE CMAKE_BUILD_TYPE PROPERTY STRINGS "Debug" "Release" "MinSizeRel" "RelWithDebInfo")
ENDIF()

set(CMAKE_CXX_STANDARD 17)
set(CMAKE_CXX_STANDARD_REQUIRED ON)
SET(THREADS_PREFER_PTHREAD_FLAG ON)

INCLUDE(CheckCXXCompilerFlag)

CHECK_CXX_COMPILER_FLAG("-march=native" COMPILER_SUPPORTS_MARCH_NATIVE)
IF(COMPILER_SUPPORTS_MARCH_NATIVE)
    SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -march=native")
ENDIF()

CHECK_CXX_COMPILER_FLAG("-mtune=native" COMPILER_SUPPORTS_MARCH_NATIVE)
IF(COMPILER_SUPPORTS_MARCH_NATIVE)
    SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -mtune=native")
ENDIF()

INCLUDE(${CMAKE_BINARY_DIR}/conanbuildinfo.cmake)
CONAN_BASIC_SETUP()

FIND_PACKAGE(Threads REQUIRED)


INCLUDE(GNUInstallDirs)

SET(SOURCE_FILES
    src/core/CoreFrequencyDomainFeatures.cpp
    src/core/CoreTimeDomainFeatures.cpp
    src/mfcc/MFCC.cpp
    src/onset-detection-functions/OnsetDetectionFunction.cpp
    src/pitch/Yin.cpp
    src/Gist.cpp
    src/fft/WindowFunctions.cpp
)

ADD_LIBRARY(${PROJECT_NAME} ${SOURCE_FILES})

TARGET_INCLUDE_DIRECTORIES(${PROJECT_NAME} PUBLIC
    $<BUILD_INTERFACE:${CMAKE_CURRENT_SOURCE_DIR}/include/*>
    $<INSTALL_INTERFACE:include>
    PRIVATE src)

INCLUDE_DIRECTORIES(include)

TARGET_LINK_LIBRARIES( ${PROJECT_NAME}
    ${CONAN_LIBS}
)

SET_TARGET_PROPERTIES(${PROJECT_NAME} PROPERTIES
    VERSION ${PROJECT_VERSION}
    SOVERSION 1)

    INSTALL(TARGETS ${PROJECT_NAME} EXPORT gistConfig
    ARCHIVE  DESTINATION ${CMAKE_INSTALL_LIBDIR}
    LIBRARY  DESTINATION ${CMAKE_INSTALL_LIBDIR}
    RUNTIME  DESTINATION ${CMAKE_INSTALL_BINDIR})  # This is for Windows
INSTALL(DIRECTORY include/ DESTINATION ${CMAKE_INSTALL_INCLUDEDIR}/${PROJECT_NAME})

INSTALL(EXPORT gistConfig DESTINATION share/gistConfig/cmake)

EXPORT(TARGETS ${PROJECT_NAME} FILE gistConfig.cmake)
